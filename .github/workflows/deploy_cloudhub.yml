# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Manual deployment

on:
  workflow_dispatch:
    inputs:
      Environment:
        description: "Target environment to deploy"
        required: true
        default: "Dev"
        type: choice
        options:
        - Dev
        - UAT
        - Prod
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: false
      version:
        description: "Version according to value set on project.version in the pom.xml"
        default: "1.0.0-SNAPSHOT"

jobs:
  deploych:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'zulu'
        cache: maven

    - uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.version }}

    - name: Deploy to CloudHub
      env:
        AP_Organization_ID: ${{ secrets.AP_Organization_ID }}
        AP_CICD_ConnectedApp_ClientID: ${{ secrets.AP_CICD_ConnectedApp_ClientID }}
        AP_CICD_ConnectedApp_ClientSecret: ${{ secrets.AP_CICD_ConnectedApp_ClientSecret }}
        AP_ENV_ClientID: ${{ secrets.AP_ENV_ClientID }}
        AP_ENV_ClientSecret: ${{ secrets.AP_ENV_ClientSecret }}
        AP_CH_Runtime_Version: ${{ secrets.AP_CH_Runtime_Version }}
      run: mvn deploy --settings .maven/settings.xml